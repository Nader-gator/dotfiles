" vim:fdm=marker
call plug#begin()
    Plug 'easymotion/vim-easymotion'
        "config {{{
        let g:EasyMotion_keys='edcrfvtgbyhnujm'
        map <C-q> <Plug>(easymotion-prefix)
        "}}}
    Plug 'sheerun/vim-polyglot'
    Plug 'wesQ3/vim-windowswap'
    Plug 'tomtom/tcomment_vim'
        "config {{{
        nmap <C-c> gcc
        "}}}
    Plug 'tpope/vim-surround'
    Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
    Plug 'junegunn/fzf.vim'
        "config {{{
        nmap <leader>ff :Files<cr>
        nmap <leader>fg :Ag<cr>
        "}}}
    Plug 'morhetz/gruvbox'
call plug#end()
colorscheme gruvbox
nmap <leader>q <Plug>(easymotion-bd-w)
nmap <leader>n :e .temp.md<Cr>
let g:EasyMotion_keys='edcrfvtgbyhnujm'

" set lines=40 
" set columns=1000
imap jj <Esc>
highlight CursorLineNr guifg=#e28409
set splitbelow
set splitright
set mouse=a
set fileignorecase
set wildignorecase
set ignorecase
nnoremap <leader>v :e ~/.vimrclite<cr>
nnoremap <leader>sv :source $MYVIMRC<cr>
map <BS> \
map <BS><BS> \\
nnoremap <leader>mv :tab split<CR>
nmap <leader>tn :tabnew<cr>
nnoremap * m`:keepjumps normal! *``<cr>
syntax on
set colorcolumn=80
set expandtab
set tabstop=4
set softtabstop=4
set shiftwidth=4
set number relativenumber

nnoremap <Space> :noh<cr>
nmap Q :q<cr>
nmap ]w :w<cr>

" set clipboard=unnamed
nnoremap d "ad
vnoremap d "ad
nnoremap dd "add
nnoremap <leader>pp "ap

" Copy to clipboard
vnoremap  y  "+y
nnoremap  Y  "+yg_
nnoremap  y  "+y
nnoremap  yy  "+yy

" " Paste from clipboard
nnoremap p "+p
nnoremap P "+P
vnoremap p "+p
vnoremap P "+P


nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

"iterative mapping {{{
let i = 1
while i <= 20
    execute 'nnoremap <Leader>' . i . '<Space>' . ' :' . i . 'wincmd w<CR>'
    execute 'nnoremap ]' . i . '<Space> ' .  i . 'gt'
    execute 'nmap <Leader>di' . i . '<Space>' .
                \ ' :let buffno=bufnr("%")<cr>' .
                \ ':let linepos=line(".")<cr>:let colpos=col(".")<cr> :' . i .
                \ 'wincmd w<cr>:execute("buffer ".buffno)<cr>:call cursor(linepos,colpos)<cr>' .
                \ ' <Plug>(coc-definition)'
    let i = i + 1
endwhile
"}}}
